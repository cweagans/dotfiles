#!/bin/zsh

# This is dumb, but all of the hashes need to be included to make Chezmoi pick
# up changes to any of the JSONC files.
{{ range (glob (joinPath .chezmoi.homeDir ".config/macos/*.jsonc")) -}}
# {{ . }} hash: {{ include . | sha256sum }}
{{ end -}}

for f in {{ .chezmoi.homeDir }}/.config/macos/*.jsonc; do
	if [ ! -e "{{ .chezmoi.homeDir }}/.config/macos/.lastupdate" ] || [ "$f" -nt "{{ .chezmoi.homeDir }}/.config/macos/.lastupdate" ]; then

		domain=$(basename $f .jsonc)
		label=$(cat "$f" | grep -v "//" | jq -r '.label')
		restart_cmd=$(cat "$f" | grep -v "//" | jq -r '.restart')
		values=$(cat "$f" | grep -v "//" | jq -r '.values | to_entries | map({"key": .key, "value": .value, "typ": (.value | type)})')

		echo "Applying ${domain} (${label})"

		intcommands=$(echo $values | jq '.[] | select(.typ == "number")'  | jq -r ". | @text \"defaults write ${domain} \\\"\(.key)\\\" -int \(.value)\"")
		boolcommands=$(echo $values | jq '.[] | select(.typ == "boolean")' | jq -r ". | @text \"defaults write ${domain} \\\"\(.key)\\\" -bool \\\"\(.value)\\\"\"")
		strcommands=$(echo $values | jq '.[] | select(.typ == "string")'  | jq -r ". | @text \"defaults write ${domain} \\\"\(.key)\\\" -string \\\"\(.value)\\\"\"")

		while read -r line; do
			if [[ "${line}" != "" ]]; then
				echo "Running ${line}"
				eval $(echo ${line})
			fi
		done < <(printf '%s\n' "$intcommands")
		while read -r line; do
			if [[ "${line}" != "" ]]; then
				echo "Running ${line}"
				eval $(echo ${line})
			fi
		done < <(printf '%s\n' "$boolcommands")
		while read -r line; do
			if [[ "${line}" != "" ]]; then
				echo "Running ${line}"
				eval $(echo ${line})
			fi
		done < <(printf '%s\n' "$strcommands")

		echo "Running restart command: ${restart_cmd}"
		eval $(echo ${restart_cmd})
	fi
done

touch {{ .chezmoi.homeDir }}/.config/macos/.lastupdate

echo "You may need to log out and log back in for all changes to take effect."
