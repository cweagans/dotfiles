#!/usr/bin/env bash

set -Eeuo pipefail
trap cleanup SIGINT SIGTERM ERR EXIT

script_dir=$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd -P)

usage() {
  cat <<EOF
Usage: $(basename "${BASH_SOURCE[0]}") [-h] [-f]

Sends all queued outgoing messages via msmtp.

Available options:

-h, --help      Print this help and exit
-f, --force     Force queue processing, even if there is a stale lock.
EOF
  exit
}

clear_lock() {
  [ -e ~/.msmtpq-flush.lock ] && rm ~/.msmtpq-flush.lock
}

cleanup() {
  trap - SIGINT SIGTERM ERR EXIT
  clear_lock
}

msg() {
  echo >&2 -e "${1-}"
}

die() {
  local msg=$1
  local code=${2-1} # default exit status 1
  msg "$msg"
  exit "$code"
}

parse_params() {
  # default values of variables set from params
  force=0
  param=''

  while :; do
    case "${1-}" in
    -h | --help) usage ;;
    -f | --force) clear_lock ;;
    -?*) die "Unknown option: $1" ;;
    *) break ;;
    esac
    shift
  done

  args=("$@")

  return 0
}

parse_params "$@"

CONFIG="$HOME/.config/msmtp/config"
MAIL_DIR="$HOME/Mail"
QUEUE_DIR="$MAIL_DIR/Outbox"
LOG="$MAIL_DIR/msmtpq.log"

[[ -d "$MAIL_DIR" ]] || mkdir -p "$MAIL_DIR"
[[ -d "$QUEUE_DIR" ]] || mkdir -p "$QUEUE_DIR"

# Log all output.
exec &> >(while read line; do echo "[$(date)] $line" | tee -a "$LOG"; done)

if [[ ! -w "$QUEUE_DIR" ]]; then
    die "Insufficient privileges to modify queue."
fi

if ! check-connection; then
    die "No internet connection available. Skipping flush."
fi

if [ -z "$(ls -A $QUEUE_DIR)" ]; then
    die "No mail queued for delivery."
fi

if [ -f "~/.msmtpq-flush.lock" ]; then
    die "msmtpq-flush is already running."
fi

# Acquire a lock
touch ~/.msmtpq-flush.lock

for mail in "$QUEUE_DIR"/*.mail/; do
    id="$(basename "$mail")"
    prefix="mail [ $id ]"
    if [[ ! -r "$mail/msmtp_flags" ]]; then
        msg "$prefix failed to send message; missing flags"
        continue
    fi
    if [[ ! -r "$mail/message" ]]; then
        msg "$prefix failed to send message; missing message"
        continue
    fi

    if [[ ! -w "$mail" ]]; then
        msg "$prefix failed to send message; insufficient privileges"
        continue
    fi

    prefix="$prefix [ $(gxargs -0 -a "$mail/msmtp_flags" printf '%s ')]"

    msg "$prefix sending"
    gxargs -0 -a "$mail/msmtp_flags" msmtp -C "$CONFIG" -X - < "$mail/message"
    ret="$?"
    if [[ ! "$ret" -eq 0 ]] ; then
        msg "$prefix failed to send; msmtp rc = $ret"
        continue
    fi
    if ! rm -rf "$mail"; then
        msg "$prefix sent but not purged from queue!?"
    fi
done

